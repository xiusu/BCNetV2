import yaml
import sys

path = sys.argv[1]
cfg = yaml.load(open(path, 'r'))

model = cfg['model']
backbone = model['backbone']

supernet = []

for stage in backbone:
    item = backbone[stage] 
    print(stage, item)
    if not isinstance(item, list):
        continue
    n, stride, c_in, c_out, expand_ratio, c_search, ops = item
    if len(expand_ratio) == 0:
        expand_ratio = [1]
    if not isinstance(expand_ratio[0], list):
        expand_ratio = [expand_ratio] * len(ops)
    for _ in range(n):
        stage = []
        for ts, op in zip(expand_ratio, ops):
            for t in ts:
                stage.append([1, stride, c_in, c_out, [t], c_search, [op]])
        supernet.append(stage)
        c_in = c_out
        stride = 1


for idx, stage in enumerate(supernet):
    print(f'\nstage {idx}')
    for i, op in enumerate(stage):
        print(f'{i} {op}')

subnet = [0] * 30
subnet = [0, 0, 5, 4, 1, 1, 0, 4, 0, 3, 3, 6, 2, 5, 1, 2, 1, 3, 5, 3, 4, 2, 5, 0, 0, 0]
s = '0 0 2 2 6 6 2 0 5 2 3 4 6 0 0 2 2 3 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0'  # top1
s = '0 0 2 2 6 6 2 0 5 2 3 4 6 0 0 2 1 2 5 4 5 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 2
s = '0 0 2 2 6 6 2 0 5 4 3 4 6 0 0 2 1 2 5 4 5 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 2 2 6 6 2 0 5 2 3 4 6 0 0 2 1 2 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 4
s = '0 0 2 2 6 6 2 0 6 4 3 4 1 0 0 2 0 3 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 5
s = '0 0 2 2 6 6 2 0 6 4 3 4 6 2 0 2 2 3 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 2 2 6 6 2 0 6 4 3 4 6 0 0 2 0 3 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
s = '0 0 2 2 6 6 2 0 5 2 3 4 6 0 0 2 0 3 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8
s = '0 0 2 2 6 6 2 0 6 4 5 4 4 0 0 2 1 2 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 9
s = '0 0 2 2 6 6 2 0 6 4 5 4 4 2 0 2 1 2 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 10

# 17619 + 3W iter
s = '0 0 5 2 6 6 4 0 4 6 2 5 4 0 1 1 6 4 5 0 2 4 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1

# 30480 + 3W iter
s = '0 0 5 2 6 6 3 1 6 6 2 3 4 2 0 2 0 2 3 0 4 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1

# 47290 + 3W iter
s = '0 0 0 0 6 0 4 2 0 0 4 4 6 2 0 2 4 3 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1

# noflops 9W iter
s = '0 0 2 4 6 4 4 6 2 6 5 6 6 4 1 4 2 2 5 5 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1

# FLOPs 50x20
s = '0 0 3 6 0 6 4 6 0 2 3 4 0 3 0 2 2 2 5 4 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1
s = '0 0 3 6 0 6 4 2 0 2 4 4 0 2 0 2 2 2 5 4 5 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 2
s = '0 0 2 2 6 6 4 2 4 2 3 4 0 0 0 2 2 1 5 4 5 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 3 6 0 6 4 6 0 2 3 4 0 2 0 2 2 2 5 5 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 4
s = '0 0 2 2 6 6 4 2 4 2 3 4 0 0 0 2 2 2 5 4 5 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 5
s = '0 0 3 6 0 6 2 0 4 2 3 4 0 4 0 2 2 2 5 4 5 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
s = '0 0 3 6 0 6 4 0 4 2 4 4 0 0 0 0 2 4 5 5 2 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 10
s = '0 0 2 2 6 6 4 2 4 2 3 4 0 4 0 2 2 2 5 4 5 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 3 6 0 6 4 6 0 2 3 4 0 2 0 0 2 2 5 5 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8
s = '0 0 3 6 0 6 4 6 0 2 3 4 0 0 0 2 2 2 5 5 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 9

# FLOPs 0.05 50x20
s = '0 0 2 0 6 6 2 1 4 0 3 4 6 0 3 0 2 3 3 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1
#s = '0 0 2 0 6 6 2 1 4 2 3 4 6 0 3 0 2 3 3 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 2
s = '0 0 2 0 6 6 2 1 4 0 3 4 6 0 3 0 0 3 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 4 6 0 6 2 0 4 0 5 4 6 0 2 2 1 3 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 4
s = '0 0 4 6 0 6 2 0 2 2 5 4 6 0 3 0 2 3 5 5 4 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 5
s = '0 0 2 0 6 6 2 0 3 2 4 4 6 0 3 0 2 2 5 5 4 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 2 0 6 6 2 2 4 1 3 4 6 0 3 0 2 3 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
s = '0 0 4 6 0 6 2 1 2 0 3 4 6 0 3 0 0 3 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8
s = '0 0 4 6 0 6 2 0 3 2 4 4 6 0 3 0 2 3 5 5 4 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 9
s = '0 0 4 6 0 6 2 0 4 0 5 4 6 0 2 2 1 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 10

# FLOPs multi-path 2/10 50x20
s = '0 0 2 6 0 2 4 6 5 2 3 2 0 2 3 2 6 4 5 4 4 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1
s = '0 0 4 6 0 2 4 6 3 2 3 2 0 2 1 2 6 4 5 4 4 0 5 0 0 0' # 2 
s = '0 0 4 6 0 2 4 6 5 2 3 2 0 2 1 2 6 4 5 4 4 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 4 6 0 2 4 6 3 2 3 2 2 2 1 2 6 4 5 4 4 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 4 6 0 2 4 6 3 2 3 2 2 2 1 2 6 4 5 4 4 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
s = '0 0 0 6 0 2 4 0 4 2 3 2 0 2 1 2 6 4 5 4 4 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8

# FLOPs multi-path 2/4 50x20
s = '0 0 2 0 6 2 4 4 6 0 2 6 4 3 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1
s = '0 0 2 0 6 2 2 4 2 0 3 6 4 2 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 2
s = '0 0 2 0 6 2 2 4 2 0 2 6 4 3 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 2 0 6 0 4 4 2 0 2 6 4 2 0 0 2 2 5 4 3 3 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 4
s = '0 0 2 0 6 2 4 4 6 0 2 6 5 2 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 5
s = '0 0 2 0 6 2 4 3 6 0 2 6 4 3 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 4 0 6 2 4 4 6 0 2 6 4 3 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
s = '0 0 4 0 6 2 4 4 6 0 2 6 4 2 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8
s = '0 0 2 0 6 2 4 4 2 0 2 4 0 2 0 0 2 2 5 4 3 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 9
s = '0 0 2 0 6 2 4 4 6 0 5 4 0 2 0 0 2 2 5 4 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 10


# FLOPs 322M multi-path 5/10 50x20  # wrong... still 330M
s = '0 0 2 0 6 2 2 2 3 6 3 0 4 6 2 4 2 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1
s = '0 0 2 2 6 2 1 2 2 6 3 4 4 6 2 4 2 2 5 5 6 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 2
s = '0 0 2 0 6 2 2 2 3 6 3 0 4 6 2 4 2 2 5 2 4 5 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 2 0 6 2 2 2 3 6 3 4 4 6 2 4 2 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 4
s = '0 0 2 0 6 2 2 2 2 6 3 4 4 6 2 4 2 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 5
s = '0 0 2 0 6 2 2 2 1 6 3 4 4 6 2 4 2 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 2 0 6 2 2 2 1 6 3 0 4 6 2 4 2 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
s = '0 0 2 0 6 2 2 2 1 6 3 4 4 6 2 4 2 2 5 2 4 5 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8
s = '0 0 2 2 6 2 2 2 1 6 3 0 4 6 2 4 2 2 5 5 2 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 9
s = '0 0 2 2 6 2 2 2 3 6 4 4 4 6 2 4 2 2 5 2 5 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 10

# SE FLOPs 330M mpath 5/10 50x20
s = '0  0  6  6 12  6  6 10  6  0  5 12 10 10  2  4  4  8  7 10  0 10 11  0' # 1
s = '0  0  6  6 12  6  6 10  6  0  5 12 10 10  2  2  4  8  7 10  0 10 11  0' # 2
s = '0  0  6  6 12  6  6 10  6  0  5 12 10 10  2  4  4  8  7  8  0 10 11  0' # 3
s = '0  0  6  6 12  6  6 10  6  2  5 12 10 10  2  4  4  8  7 10  2 10 11  0' # 4
s = '0  0  6  6  6 12  8 10  6  0  6  8 12 11  2  2  4  8  7 10  2 10 11  0' # 5
s = '0  0  6  6  6 12  6 10  6  0  5 12 10 10  2  4  4 10  7 10  2 10 11  0' # 6
s = '0  0  6  6 12  6  6 10  4 12  6  8 12 11  2  2  4  8  7 10  0 10 11  0' # 7
s = '0  0  6  6 12  6  6 10  6  0  5 12 10 10  2  2  4  8  7 10  2 10 11  0' # 8
s = '0  0  6  6 12  6  6 10  4 12  6 12 10  7  2  4  4  8  7 10  2 10 11  0' # 9
s = '0  0  6  6 12  6  6 10  6  2  5 12 10 10  2  2  4  8  7 10  2 10 11  0' # 10

# FLOPs 322M multi-path 5/10 50x20 0.05
s = '0 0 2 0 6 6 2 1 4 2 3 4 6 0 2 3 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 1
s = '0 0 2 0 6 6 2 1 4 5 3 0 6 4 2 0 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 2
s = '0 0 2 0 6 6 2 1 4 3 3 0 6 4 2 0 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 3
s = '0 0 2 0 6 6 2 1 4 2 3 4 6 4 2 0 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 4
s = '0 0 2 0 6 6 2 0 4 1 3 4 6 0 2 3 0 2 5 4 0 3 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 5
s = '0 0 2 0 6 6 2 1 4 0 3 4 6 0 2 3 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 6
s = '0 0 2 0 6 6 2 0 4 1 3 4 4 0 2 0 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 7
#s = '0 0 2 0 6 6 2 1 4 4 3 0 6 4 2 0 0 2 5 5 0 2 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 8
#s = '0 0 2 0 6 6 2 1 4 2 3 4 6 0 2 3 0 2 5 5 0 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 9
#s = '0 0 2 0 6 6 2 1 4 2 3 4 4 0 2 0 0 2 5 5 0 4 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0' # 10


subnet = [int(i) for i in s.replace('  ', ' ').split(' ')]
res_subnet = []
for idx, ops in zip(subnet, supernet):
    res_subnet.append(ops[idx])

print('\ngenerate result:')
print(f'subnet: {subnet}\n')
for idx, op in enumerate(res_subnet):
    print(f'layer{idx}: {op}')
